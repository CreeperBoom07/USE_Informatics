'''Приём применяется при очень большом количестве комбинаций.
   ЗАДАНИЕ: Рассматриваются числа, восьмеричная запись которых содержит ровно 11
   знаков. Определите количество таких чисел, в восьмеричной записи которых
   ровно четыре нечётных цифры, причём никакие две нечётные цифры не стоят рядом
   ОТВЕТ: 256_901_120'''

'''При стандартном решении надо будет перебрать 8**11 комбинаций'''
# TODO: Перебором мы получим не сами числа, а конфигурации чисел. \
#       В нашем случае, КОНФИГУРАЦИЯ - это положение чётных и нечётных чисел


from itertools import product as pd

k = 0
'''В этом случае 2**11 комбинаций'''
for x in pd('ЧН', repeat=11):
    s = ''.join(x)
    if s.count('Н') == 4 and 'НН' not in s:
        '''Теперь для каждой подходящей конфигурации подсчитаем 
           руками количество подходящих цифр в них.
           
           В восьмеричной системе счисления: 0 1 2 3 4 5 6 7
           ЧЁТНЫЕ: 0 2 4 6 -> 4 цифры. Для первой цифры: 2 4 6 -> 3, т.к. число не может начинаться с 0
           НЕЧЁТНЫЕ: 1 3 5 7 -> 4 цифры'''
        if s[0] == 'Ч':  # Если число начинается с чётной цифры
            '''Ч Н Н Н Н Н Н Н Н Н Н
               3*4*4*4*4*4*4*4*4*4*4 = 3 * 4^10'''
            k += 3 * 4 ** 10
        else:
            '''Н Ч Ч Ч Ч Ч Ч Ч Ч Ч Ч
               4*4*4*4*4*4*4*4*4*4*4 = 4^11'''
            k += 4 ** 11  # Если с нечётной
print(k)
